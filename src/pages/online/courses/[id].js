import React, {useEffect} from "react";
import OnlineLayout from "@/components/online/online-layout";

import Head from "next/head";
import OnlineCourseDetailsHero from "@/components/online/course/online-course-details-hero";
import OnlineCourseDetailsStats from "@/components/online/course/online-course-details-stats";
import OnlineCourseDetailsApproach from "@/components/online/course/onlinecourse-details-approach";
import OnlineCourseDetailsMap from "@/components/online/course/online-course-details-map";
import OnlineCourseDetailsProgram from "@/components/online/course/online-course-details-program";
import OnlineCourseMentors from "@/components/online/course/online-course-mentors";
import {getCourseList} from "@/api-functions/course/get-course-list";
import {getCourse} from "@/api-functions/course/get-course";

export const getStaticPaths = async () => {
    const data = await getCourseList();

    const paths = data?.results.map(_course => ({params: {id: _course?.id?.toString()}}));
    return {
        paths,
        fallback: false
    }
}

export const getStaticProps = async (context) => {
    const id = context.params.id;
    const data = await getCourse({id});

    return {
        props: {
            courseData: data?.result
        }
    }
}

const OnlineDetail = (props) => {
    const {courseData} = props

    useEffect(() => {
        console.log(courseData)
    }, [])
    return (
        <>
            <Head>
                <title>Course Name | {process.env.NEXT_PUBLIC_COMPANY_NAME}</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <OnlineCourseDetailsHero
                id={courseData.id}
                title={courseData.name}
                description={courseData.description}
                color={courseData.color}
                image={courseData.image}
            />
            <OnlineCourseDetailsStats
                modules_count={courseData.module_count}
                lessons_count={courseData.lesson_count}
                duration={courseData.duration}
            />
            <OnlineCourseDetailsApproach
                intended_students={courseData.intended_students}
            />
            <OnlineCourseDetailsMap
                benefits={courseData.course_benefits}
            />
            <OnlineCourseMentors
                mentors={courseData.mentors}
                color={courseData.color}
            />
            <OnlineCourseDetailsProgram/>
        </>
    );
};

OnlineDetail.getLayout = (page) => <OnlineLayout>{page}</OnlineLayout>;

export default OnlineDetail;
